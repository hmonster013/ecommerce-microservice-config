spring:
  # Enable ANSI colors in console output
  output:
    ansi:
      enabled: always

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/shopping_cart_db}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false

  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      timeout: 2000
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2000ms

  cache:
    type: redis

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      show-components: always
  info:
    env:
      enabled: true

# Authentication and CORS handled by API Gateway
# No JWT or CORS configuration needed in microservices

# Application Configuration
app:

  security:
    rate-limit:
      enabled: ${RATE_LIMIT_ENABLED:true}
      general-requests: ${GENERAL_RATE_LIMIT:100}

# Shopping Cart Specific Configuration
shopping-cart:
  cache:
    ttl:
      active-cart: 86400 # 24 hours
      guest-cart: 3600   # 1 hour
      session-cart: 1800 # 30 minutes
  validation:
    max-items-per-cart: 100
    max-quantity-per-item: 99
  pricing:
    currency: USD
    tax-rate: 0.08

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha
    tryItOutEnabled: true
    filter: true
    displayRequestDuration: true
    docExpansion: none
    defaultModelsExpandDepth: 1
    defaultModelExpandDepth: 1
  show-actuator: true
  group-configs:
    - group: 'shopping-cart-service-v1'
      display-name: 'Shopping Cart Service API (v1)'
      paths-to-match:
        - '/carts/**'
        - '/cart-items/**'
        - '/actuator/**'

logging:
  level:
    org.de013.shoppingcart: DEBUG
    org.springframework.data.redis: DEBUG
